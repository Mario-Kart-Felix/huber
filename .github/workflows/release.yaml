name: Release

on:
  workflow_dispatch:
    inputs:
  push:
    tags:
      - 'v*'

jobs:
  create-github-release:
    name: Create github release
    runs-on: ubuntu-latest
    needs: [ ]
    steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v2

      - name: Create changelog
        id: changelog
        uses: innobead/github-release-notes-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release and upload artifacts
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.changelog.outputs.changelog }}
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  release-linux-x86_64:
    name: Release for linux x86_64
    runs-on: ubuntu-latest
    needs: create-github-release
    steps:
      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v2

      - name: Setup build environment
        run: make setup-dev

      - name: Build all artifacts
        run: make release

      - name: Upload artifacts to release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./.target/*"
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  release-linux-aarch64:
    name: Rlease for Linux AArch64
    runs-on: ubuntu-latest
    needs:
      - create-github-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Setup, Test, Build
        run: make release-multiarch

      - name: Upload artifacts to release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./.target/*"
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  #  release-linux-armv7:
  #    name: Rlease for Linux ARMv7
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout code
  #        uses: actions/checkout@v2
  #
  #      - name: Set up QEMU
  #        uses: docker/setup-qemu-action@v1
  #
  #      - name: Set up Docker Buildx
  #        id: buildx
  #        uses: docker/setup-buildx-action@v1
  #        with:
  #          version: latest
  #
  #      - name: Available platforms
  #        run: echo ${{ steps.buildx.outputs.platforms }}
  #
  #      - name: Setup, Test, Build
  #        run: PLATFORMS=linux/arm/v7 make release-multiarch

  release-macos:
    name: Release for MacOS
    runs-on: macos-latest
    needs:
      - create-github-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup build environment
        run: make setup-dev

      - name: Build all artifacts
        run: source ~/.bashrc && make release

      - name: Upload artifacts to release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./.target/*"
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    name: Release for Windows
    runs-on: windows-latest
    needs:
      - create-github-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup build environment
        run: ./hack/windows/setup-dev.ps1

      - name: Build all artifacts
        run: ./hack/windows/release.ps1

      - name: Upload artifacts to release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "./target/release/*.exe*"
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

